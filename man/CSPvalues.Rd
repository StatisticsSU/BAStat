% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pvaluesides.R
\name{CSPvalues}
\alias{CSPvalues}
\title{Compute p-values and take decisions under a t-distribution or a normal distribution}
\usage{
CSPvalues(cs = "Standard Normal", Crit, Obs, alternative, method, degree.freed)
}
\arguments{
\item{Crit}{critical value}

\item{Obs}{observed value already as a Student or standardized Normal value}

\item{alternative}{\code{two.sided} if the alternative hypothesis is on both sides; \code{greater} if the alternative hypothesis is on the right side; \code{less} if the alternative hypothesis is on the left side.}

\item{method}{\code{areas} in this case the comparison and the decision is based on the areas and the result of the p-values is also presented. If method is equal to \code{values} than the decision is based on the values of the distribution and the values from the observations.}

\item{degree.freed}{it is the number of degree of freedom}
}
\value{
plot with the comparison between the theoretical area for the critical region and the obtained p-value. On the top of the plot is reported the answer: if it has to be rejected of not the null hypothesis. On the left side of the plot is reported the computed p-value and the computed area for the theoretical value. If the method is with the values then the plot will be with the critical point and the observed point
}
\description{
This function helps in the learning process: when the null hypothesis can be rejected based on the p-value. It is implemented for one and two tailed t-tests. It is for the test of hypothesis for the mean of one or two populations as well as a support for the estimated parameters of a regression model.
}
\examples{
library(BAStat)

Crit =qnorm(0.95)
CSPvalues(Crit = 1.65,Obs= 3,alternative="greater",method="areas")
CSPvalues(Crit = 1.65,Obs= 3,alternative="greater",method="values")

Crit =qnorm(0.05)
CSPvalues(Crit = -1.65,Obs= -3,alternative="less",method="areas")
CSPvalues(Crit = -1.65,Obs= -3,alternative="less",method="values")

Crit =qnorm(0.025)
CSPvalues(Crit = -1.96,Obs= -3,alternative="two.sided",method="areas")
CSPvalues(Crit = -1.96,Obs= -3,alternative="two.sided",method="values")

Crit =qnorm(0.975)
CSPvalues(Crit = 1.96,Obs= 3,alternative="two.sided",method="areas")
CSPvalues(Crit = 1.96,Obs= 3,alternative="two.sided",method="values")

Crit =qt(0.95,18)
CSPvalues(cs="t",Crit = 1.7341,Obs= 3.0867,degree.freed=18,alternative="greater",method="areas")
CSPvalues(cs="t",Crit = 1.7341,Obs= 3.0867,degree.freed=18,alternative="greater",method="values")

Crit =qt(0.05,18)
CSPvalues(cs="t",Crit = -1.7341,Obs= -3.0867,degree.freed=18,alternative="less",method="areas")
CSPvalues(cs="t",Crit = -1.7341,Obs= -3.0867,degree.freed=18,alternative="less",method="values")
Crit =qt(0.025,18)
CSPvalues(cs="t",Crit = -2.1009,Obs= -3.0867,degree.freed=18,alternative="two.sided",method="areas")
CSPvalues(cs="t",Crit = -2.1009,Obs= -3.0867,degree.freed=18,alternative="two.sided",method="values")
Crit =qt(0.975,18)
CSPvalues(cs="t",Crit = 2.1009,Obs= 3.0867,degree.freed=18,alternative="two.sided",method="areas")
CSPvalues(cs="t",Crit = 2.1009,Obs= 3.0867,degree.freed=18,alternative="two.sided",method="values")
}
